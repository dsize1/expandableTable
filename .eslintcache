[{"D:\\前端\\react基础架构\\table\\table\\src\\index.js":"1","D:\\前端\\react基础架构\\table\\table\\src\\reportWebVitals.js":"2","D:\\前端\\react基础架构\\table\\table\\src\\App.js":"3","D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\index.jsx":"4","D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\simuData.js":"5","D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\utils.js":"6","D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\hooks\\usePagination.js":"7","D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\hooks\\useExpandable.jsx":"8","D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\hooks\\useSortable.js":"9","D:\\前端\\react基础架构\\table\\table\\src\\components\\FilterDropDown\\index.jsx":"10"},{"size":500,"mtime":1609474964530,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607744834221,"results":"13","hashOfConfig":"12"},{"size":2841,"mtime":1609776669644,"results":"14","hashOfConfig":"12"},{"size":3611,"mtime":1609769057598,"results":"15","hashOfConfig":"12"},{"size":2294,"mtime":1609775776076,"results":"16","hashOfConfig":"12"},{"size":4084,"mtime":1609685662450,"results":"17","hashOfConfig":"12"},{"size":1054,"mtime":1609769084031,"results":"18","hashOfConfig":"12"},{"size":4635,"mtime":1609606216431,"results":"19","hashOfConfig":"12"},{"size":2406,"mtime":1609688036471,"results":"20","hashOfConfig":"12"},{"size":1801,"mtime":1609776784516,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1amf5dj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\前端\\react基础架构\\table\\table\\src\\index.js",[],["44","45"],"D:\\前端\\react基础架构\\table\\table\\src\\reportWebVitals.js",[],"D:\\前端\\react基础架构\\table\\table\\src\\App.js",["46","47","48","49"],"D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\index.jsx",["50","51"],"import React, { Fragment, useMemo, useCallback } from 'react';\r\nimport { Table, Pagination } from 'antd';\r\nimport _get from 'lodash/get';\r\nimport _omit from 'lodash/omit';\r\nimport _isArray from 'lodash/isArray';\r\nimport _isFunction from 'lodash/isFunction';\r\nimport useExpandable from './hooks/useExpandable';\r\nimport usePagination from './hooks/usePagination';\r\nimport useSortable from './hooks/useSortable';\r\nimport { getFinalData, getPagedData } from './utils';\r\n\r\nconst omitKeys = ['pagination', 'expandable', 'onTableChange', 'rowKey', 'dataSource', 'columns', 'multipleSort'];\r\n\r\nconst ExpandableTable = (props) => {\r\n  const tableProps = _omit(props, omitKeys);\r\n  const paginationProp = _get(props, 'pagination', {});\r\n  const dataSourceProp = _get(props, 'dataSource', []);\r\n  const columnsProp = _get(props, 'columns', []);\r\n  const onChangeProp = _get(props, 'onChange');\r\n  const multipleSort = _get(props, 'multipleSort', false);\r\n\r\n  const {\r\n    expandableData,\r\n    expandableColumns,\r\n    expandedRowKeys,\r\n    onExpand,\r\n    expandedSet,\r\n    expandableMap,\r\n    expandable\r\n  } = useExpandable(dataSourceProp, columnsProp);\r\n  const {\r\n    sortableColumns,\r\n    sorters,\r\n    onSort\r\n  } = useSortable(expandableColumns, multipleSort);\r\n  const {\r\n    paginationOption,\r\n    onPageChange,\r\n    onPageSizeChange\r\n  } = usePagination(paginationProp);\r\n\r\n  const finalData = useMemo(\r\n    () => {\r\n      const finalData = getFinalData(\r\n        expandableData,\r\n        { map: expandableMap, sorters }\r\n      );\r\n      return finalData;\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [\r\n      expandableData,\r\n      expandedRowKeys,\r\n      sorters\r\n    ]\r\n  );\r\n\r\n  const pagedData = useMemo(() => {\r\n    const start = (paginationOption.current - 1) * paginationOption.pageSize;\r\n    const paged = getPagedData(finalData, start, paginationOption.pageSize);\r\n    return paged;\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [finalData, paginationOption.current, paginationOption.pageSize])\r\n\r\n  const onTableChange = useCallback((_pagination, filters, sorter, extra) => {\r\n    if (_isFunction(onChangeProp)) onChangeProp(paginationOption, filters, sorter, extra);\r\n    if (extra.action === 'sort') {\r\n      if (_isArray(sorter)) {\r\n        onSort(sorter);\r\n      } else {\r\n        onSort([sorter]);\r\n      }\r\n    } \r\n  }, [onSort, onChangeProp, paginationOption]);\r\n\r\n  const onPaginationChange = useCallback((nextPage, pageSize) => {\r\n    if (_isFunction(onChangeProp)) {\r\n      onChangeProp(\r\n        { nextPage, pageSize },\r\n        null,\r\n        sorters,\r\n        { action: 'pagination' }\r\n      );\r\n    }\r\n    onPageChange(nextPage, pageSize);\r\n  }, [onPageChange, sorters, onChangeProp]);\r\n\r\n  const onPaginationShowSizeChange = useCallback((current, size) => {\r\n    if (_isFunction(onChangeProp)) {\r\n      onChangeProp(\r\n        { current, size },\r\n        null,\r\n        sorters,\r\n        { action: 'pagination' }\r\n      );\r\n    }\r\n    onPageSizeChange(current, size);\r\n  }, [onPageSizeChange, sorters, onChangeProp]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Table\r\n        {...tableProps}\r\n        columns={sortableColumns}\r\n        dataSource={pagedData}\r\n        rowKey=\"expandKey\"\r\n        pagination={false}\r\n        expandable={expandable}\r\n        onChange={onTableChange}\r\n      />\r\n      <Pagination\r\n        {...paginationOption}\r\n        total={expandableData.length}\r\n        onChange={onPaginationChange}\r\n        onShowSizeChange={onPaginationShowSizeChange}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ExpandableTable;","D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\simuData.js",[],"D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\utils.js",[],"D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\hooks\\usePagination.js",[],"D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\hooks\\useExpandable.jsx",[],"D:\\前端\\react基础架构\\table\\table\\src\\components\\ExpandableTable\\hooks\\useSortable.js",[],"D:\\前端\\react基础架构\\table\\table\\src\\components\\FilterDropDown\\index.jsx",["52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":17,"nodeType":"60","messageId":"61","endLine":2,"endColumn":22},{"ruleId":"58","severity":1,"message":"62","line":2,"column":24,"nodeType":"60","messageId":"61","endLine":2,"endColumn":30},{"ruleId":"58","severity":1,"message":"63","line":2,"column":32,"nodeType":"60","messageId":"61","endLine":2,"endColumn":37},{"ruleId":"58","severity":1,"message":"64","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":23},{"ruleId":"58","severity":1,"message":"65","line":26,"column":5,"nodeType":"60","messageId":"61","endLine":26,"endColumn":13},{"ruleId":"58","severity":1,"message":"66","line":27,"column":5,"nodeType":"60","messageId":"61","endLine":27,"endColumn":16},{"ruleId":"58","severity":1,"message":"67","line":7,"column":5,"nodeType":"60","messageId":"61","endLine":7,"endColumn":20},{"ruleId":"58","severity":1,"message":"68","line":8,"column":5,"nodeType":"60","messageId":"61","endLine":8,"endColumn":17},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Space' is defined but never used.","'ExpandableTable' is defined but never used.","'onExpand' is assigned a value but never used.","'expandedSet' is assigned a value but never used.","'setSelectedKeys' is assigned a value but never used.","'selectedKeys' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]